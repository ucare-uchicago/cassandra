/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.cassandra.gms;

import java.net.InetAddress;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.atomic.AtomicInteger;

/**
 * A unique version number generator for any state that is generated by the
 * local node.
 */

public class VersionGenerator
{
    private static final AtomicInteger version = new AtomicInteger(0);
    
    private static final ConcurrentHashMap<InetAddress, AtomicInteger> versionMap = new ConcurrentHashMap<InetAddress, AtomicInteger>();

    public static int getNextVersion()
    {
        return version.incrementAndGet();
    }
    
    public static int getNextVersion(InetAddress address) {
        if (address == null) {
            return version.incrementAndGet();
        }
        if (!versionMap.containsKey(address)) {
            versionMap.put(address, new AtomicInteger(0));
        }
        return versionMap.get(address).incrementAndGet();
    }
}
