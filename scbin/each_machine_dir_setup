#!/bin/sh

os=`uname`
if [ ! $os = Linux ]; then
  echo Multi-machine IP setup script supports only Linux
  exit 1
fi

cwd=`pwd`
scriptdir=`dirname $0`
cd $scriptdir
scriptdir=`pwd`
cd $cwd

. $scriptdir/readconfig

my_ip=`ifconfig eth0 | grep "\<inet\>" | awk '{print $2}' | awk -F : '{print $2}'`
my_id=`grep "\<$my_ip\>" $machinelist | awk '{print $1}'`

phy_node=`wc -l $machinelist | awk '{print $1}'`
all_node=`expr $phy_node \* $num_node`

rm -rf $operating_dir/* 2> /dev/null

sudo mkdir -p $operating_dir
sudo chown `whoami` $operating_dir
mkdir -p $operating_dir/cassconf
mkdir $operating_dir/log

i=1
while [ $i -le $num_node ]; do
  ip=192.168.${my_id}.${i}
  token_id=`expr \( $my_id - 1 \) \* $num_node + $i - 1`
  #token=`java -cp ../build/classes/main edu.uchicago.cs.ucare.cassandra.util.TokenGenerator $all_node $token_id`
  token=`java -cp ../lib/apache-cassandra-1.2.0-beta1-SNAPSHOT.jar edu.uchicago.cs.ucare.cassandra.util.TokenGenerator $all_node $token_id`
  cp -r $scriptdir/resources/conf $operating_dir/cassconf/conf$i
  cd $operating_dir/cassconf/conf$i
  sed "s:\$operating_dir:$operating_dir:g" cassandra.yaml.multi.template | sed "s:\$ip_address:$ip:g" | sed "s:\$machine_id:$my_id:g" | sed "s:\$id:$i:g" | sed "s:\$token:$token:g" > cassandra.yaml
  cd $cwd
  i=`expr $i + 1`
done

if [ ! $cassandra_home ]; then
  cassandra_home=$scriptdir/..
fi

cp -r $scriptdir/resources/bin $operating_dir
cp $scriptdir/resources/allnode_start $operating_dir
cp $scriptdir/resources/allnode_decom $operating_dir
cp $scriptdir/resources/onenode_start $operating_dir
cp $scriptdir/resources/onenode_stop $operating_dir
cp $scriptdir/resources/sc.properties $operating_dir

echo cassandra_home=$cassandra_home > $operating_dir/sc.conf
echo num_node=$num_node >> $operating_dir/sc.conf
echo property_file=$property_file >> $operating_dir/sc.conf
echo id_offset=$my_id >> $operating_dir/sc.conf

